{"name":"Cakephp-yalp","tagline":"CakePHP plugin for LDAP Authentication","body":"# Yet Another LDAP CakePHP Plugin\r\n\r\nCakePHP plugin for LDAP Authentication.\r\n\r\n## Requirements\r\n\r\nThis Plugin has the following requirements:\r\n\r\n* CakePHP 2.2.0 or greater.\r\n* PHP 5.3.0 or greater.\r\n\r\n**It could be work on lower versions of CakePHP or PHP**\r\n\r\n## Installation\r\n\r\n### 1. Set up your Auth environment\r\n\r\n* Create your \"users\" table as specified in database scheme example. If you use Mysql basically is as it follows:\r\n```sql\r\nCREATE TABLE IF NOT EXISTS `groups` (\r\n  `id` int(11) NOT NULL AUTO_INCREMENT,\r\n  `name` varchar(100) COLLATE utf8_unicode_ci NOT NULL,\r\n  `created` datetime DEFAULT NULL,\r\n  `modified` datetime DEFAULT NULL,\r\n  PRIMARY KEY (`id`)\r\n) ENGINE=InnoDB;\r\n\r\n\r\nCREATE TABLE IF NOT EXISTS `users` (\r\n  `id` int(11) NOT NULL AUTO_INCREMENT,\r\n  `username` varchar(255) COLLATE utf8_unicode_ci NOT NULL,\r\n  `password` char(40) COLLATE utf8_unicode_ci DEFAULT NULL,\r\n  `group_id` int(11) NOT NULL,\r\n  `created` datetime DEFAULT NULL,\r\n  `modified` datetime DEFAULT NULL,\r\n  PRIMARY KEY (`id`),\r\n  UNIQUE KEY `username` (`username`)\r\n) ENGINE=InnoDB;\r\n```\r\n* This plugin is designed to work exactly as CakePHP default auth component. \r\n\r\nSee: [CakePHP: Simple Authentication and Authorization Application](http://book.cakephp.org/2.0/en/tutorials-and-examples/blog-auth-example/auth.html)\r\n\r\n### 2. Configure Auth in your AppController\r\n\r\nThis config is pretty much the same as CakePHP tutorials about Auth and ACL. It should look something like this:\r\n```php\r\nApp::uses('Controller', 'Controller');\r\n\r\nclass AppController extends Controller {\r\n\r\n\tpublic $components = array(\r\n\t\t'Acl',\r\n\t\t'Auth' => array(\r\n\t\t\t'authorize' => array(\r\n\t\t\t\t'Actions' => array('actionPath' => 'controllers')\r\n\t\t\t)\r\n\t\t),\r\n\t\t'Session',\r\n\t);\r\n\r\n\tpublic $helpers = array('Html', 'Form','Session');\r\n\r\n\tpublic function beforeFilter() {\r\n\t\t//Configure AuthComponent\r\n\t\t$this->Auth->loginAction = array(\r\n\t\t\t'plugin' => false, \r\n\t\t\t'controller' => 'users',\r\n\t\t\t'action' => 'login'\r\n\t\t\t);\r\n\t\t$this->Auth->logoutRedirect = array(\r\n\t\t\t'plugin' => false, \r\n\t\t\t'controller' => 'users',\r\n\t\t\t'action' => 'login'\r\n\t\t\t);\r\n\t\t$this->Auth->loginRedirect = '/';\r\n\r\n\t\t$this->Auth->authError = __('You are not authorized to access that location.');\r\n\r\n\t\t// If YALP not loaded then use Form Auth\r\n\t\tif (CakePlugin::loaded('YALP'))\r\n\t\t\t$this->Auth->authenticate = array('YALP.LDAP' => null);\r\n\t\t\r\n\t\tparent::beforeFilter();\r\n\t}\r\n}\r\n```\r\n\r\n### 3. Download YALP\r\n\r\n* Clone/Copy the files in this directory into `app/Plugin/YALP`. This can be done with the git submodule command\r\n```sh\r\ngit submodule add https://github.com/jvalecillos/cakephp-yalp.git app/Plugin/YALP\r\n```\r\n\r\n### 4. Configure the plugin\r\n\r\n* Ensure the plugin is loaded in `app/Config/bootstrap.php`:\r\n```php\r\nCakePlugin::load('YALP', array('bootstrap' => true));\r\n```\r\n* Create a `app/Config/ldap.php` config file with correspondent LDAP values. E.g.:\r\n```php\r\n$config['LDAP']['server'] = 'ldap://com.example:3268/DC=example';\r\n$config['LDAP']['port'] = '3268';\r\n$config['LDAP']['user'] = 'DOMAIN\\ldap_user';\r\n$config['LDAP']['password'] = 'password';\r\n// Base DN for searching under\r\n$config['LDAP']['base_dn'] = 'OU=Employees,DC=com,DC=example';\r\n// This is an LDAP filter that will be used to look up user objects by username.\r\n// %USERNAME% will be replaced by the username entered by the user.\r\n// Therefore, you can do things like proxyAddresses lookup to find\r\n// a user by any of their email addresses.\r\n$config['LDAP']['user_filter'] = \"(&(objectClass=User) (sAMAccountName=%USERNAME%))\";\r\n$config['LDAP']['user_wide_filter'] = \"(& (objectClass=User) (| (sAMAccountName=%USERNAME%*) (givenName=%USERNAME%*) (sn=%USERNAME%*) ) )\";\r\n// Form fields - we're expecting a username and password,\r\n// but the form data might call them e.g. 'email' and 'password'\r\n$config['LDAP']['form_fields'] = array ('username' => 'username', 'password' => 'password');\r\n// LDAP fields to retrieve by default\r\n$config['LDAP']['ldap_attribs'] = array ('samaccountname','givenname', 'sn', 'mail', 'department');\r\n// Database model for users\r\n$config['LDAP']['db_model'] = \"User\";\r\n// LDAP filter to look up for group membership\r\n$config['LDAP']['group_filter'] = \"(&(objectCategory=User) (memberOf=CN=%GROUPNAME%, OU=Common Groups,\". $config['LDAP']['base_dn'] .\"))\";\r\n```\r\n* You could change LDAP filters as your need. Below is a link about Active Directory particular case.\r\n* Please notice that in this case username and samaccountname (ldap attribute) correspond each other and are use for authentication.\r\n\r\nSee: [Active Directory: LDAP Syntax Filters](https://social.technet.microsoft.com/wiki/contents/articles/5392.active-directory-ldap-syntax-filters.aspx)\r\n\r\n## Licence\r\n\r\nMIT\r\n\r\n[@jvalecillos]:http://twitter,com/jvalecillos\r\n[web]:http://jvalecillos.net\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}